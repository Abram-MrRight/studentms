name: CI/CD Pipeline with Monitoring

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      pushgateway:
        image: prom/pushgateway:latest
        ports:
          - 9091:9091

      prometheus:
        image: prom/prometheus:latest
        ports:
          - 9092:9090  # Change the host port to 9092
        env:
          PROMETHEUS_CONFIG: /etc/prometheus/prometheus.yml

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      - name: Create Prometheus config directory
        run: mkdir -p ${{ github.workspace }}/prometheus_config

      - name: Copy Prometheus config
        run: cp ${{ github.workspace }}/prometheus.yml ${{ github.workspace }}/prometheus_config/prometheus.yml

      - name: Start Prometheus with custom config
        run: |
          docker run -d --name prometheus \
            -p 9092:9090 \
            -v ${{ github.workspace }}/prometheus_config/prometheus.yml:/etc/prometheus/prometheus.yml \
            prom/prometheus:latest


  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      - name: Build frontend
        working-directory: frontend
        run: npm run build

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/studentms-app:0.1 .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/studentms-app:0.1
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/studentms-app:0.1 ${{ secrets.DOCKER_HUB_USERNAME }}/studentms-app:staging
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/studentms-app:staging

      - name: Wait for Pushgateway to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:9091/; then
              echo "Pushgateway is up"
              break
            fi
            echo "Waiting for Pushgateway..."
            sleep 2
          done

      - name: Monitor pipeline with Prometheus
        run: |
          echo "CI duration: ${{ github.run_duration }}" | curl --data-binary @- http://pushgateway:9091/metrics/job/ci_metrics

  deploy-prod:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/studentms-app:prod .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/studentms-app:prod
